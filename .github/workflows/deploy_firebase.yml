name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main  # Trigger workflow on pushes to the main branch
  pull_request:
    branches:
      - main  # Optional: Run checks on pull requests to main

jobs:
  build-and-deploy:
    name: Build and Deploy to Firebase Hosting
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'  # Use the stable Flutter version

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: flutter pub get

      # Step 4: Build the web app
      - name: Build Flutter Web
        run: flutter build web

      # Step 5: Set up Firebase CLI
      - name: Set up Firebase CLI
        uses: w9jds/firebase-action@v2.0.0
        with:
          args: version --json
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      # Step 6: Deploy to Firebase Hosting
      - name: Deploy to Firebase Hosting
        run: firebase deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      # Step 7: Environment validation (optional)
      - name: Validate Environment Variables
        run: |
          echo "FIREBASE_WEB_API_KEY: ${{ secrets.FIREBASE_WEB_API_KEY }}"
          echo "FIREBASE_WEB_APP_ID: ${{ secrets.FIREBASE_WEB_APP_ID }}"
          echo "FIREBASE_WEB_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_WEB_MESSAGING_SENDER_ID }}"
          echo "FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}"
          echo "FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}"
          echo "FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}"
