name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main # Trigger workflow on pushes to the main branch
  pull_request:
    branches:
      - main # Optional: Run checks on pull requests to main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Flutter with the correct version (3.27.3)
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.3' # Match your local Flutter version

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: flutter pub get

      # Step 4: Build the Flutter web app
      - name: Build Flutter Web
        run: flutter build web

      # Step 5: Set up Firebase CLI
      - name: Set up Firebase CLI
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_TRACKERU_DB }}
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          channelId: live

      # Step 6: Deploy to Firebase Hosting
      - name: Deploy to Firebase Hosting
        run: firebase deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      # Optional: Validate Environment Variables
      - name: Validate Environment Variables
        run: |
          echo "FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}"
          echo "FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}"
          # Avoid printing sensitive secrets in logs
